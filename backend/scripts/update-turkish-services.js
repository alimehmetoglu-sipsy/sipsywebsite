const Database = require('better-sqlite3');
const path = require('path');

// Open the database
const db = new Database(path.join(__dirname, '..', '.tmp', 'data.db'));

// Improved Turkish descriptions mapped by document_id
const turkishDescriptions = {
  // AI Stratejisi & Danƒ±≈ümanlƒ±ƒüƒ±
  'ybp3zy95i9niaznded6fy4v0': "ƒ∞≈ü hedeflerinizle uyumlu kapsamlƒ± bir AI stratejisi geli≈ütirmek i√ßin uzman danƒ±≈ümanlarƒ±mƒ±zla ortaklƒ±k kurun. Mevcut yeteneklerinizin kapsamlƒ± deƒüerlendirmesini yapar, y√ºksek etkili AI fƒ±rsatlarƒ±nƒ± belirler ve uygulama i√ßin eyleme ge√ßirilebilir yol haritalarƒ± olu≈ütururuz. Yakla≈üƒ±mƒ±mƒ±z, AI giri≈üimlerinizin √∂l√ß√ºlebilir yatƒ±rƒ±m getirisi ve s√ºrd√ºr√ºlebilir rekabet avantajƒ± saƒülamasƒ±nƒ± garanti etmek i√ßin teknik uzmanlƒ±ƒüƒ± i≈ü anlayƒ±≈üƒ±yla birle≈ütirir.",

  // Makine √ñƒürenimi ve Yapay Zeka Geli≈ütirme
  'f0wdmzf9icifmiuvlkugpqvz': "√ñzel makine √∂ƒürenimi ve AI geli≈ütirme hizmetlerimizle verilerinizi akƒ±llƒ± i≈ü √ß√∂z√ºmlerine d√∂n√º≈üt√ºr√ºn. Ekibimiz, tahmine dayalƒ± analitiklerden ve √∂neri sistemlerinden doƒüal dil i≈üleme ve bilgisayarlƒ± g√∂r√º uygulamalarƒ±na kadar √ºretime hazƒ±r ML modelleri olu≈üturma konusunda uzmanla≈ümƒ±≈ütƒ±r. Veri hazƒ±rlama ve model eƒüitiminden daƒüƒ±tƒ±m ve izlemeye kadar t√ºm ML ya≈üam d√∂ng√ºs√ºn√º y√∂netiyor, AI √ß√∂z√ºmlerinizin √∂l√ßeklenebilir, g√ºvenilir ve s√ºrekli geli≈üen olmasƒ±nƒ± saƒülƒ±yoruz.",

  // RPA & Hyperautomation
  'hqyb5pe58nr7besot3j1qwcj': "Geleneksel RPA'nƒ±n √∂tesine ge√ßen akƒ±llƒ± otomasyon √ß√∂z√ºmlerimizle operasyonlarƒ±nƒ±zda devrim yaratƒ±n. Robotik s√ºre√ß otomasyonu, AI destekli karar verme ve i≈ü akƒ±≈üƒ± orkestrasyonunu birle≈ütiren u√ßtan uca otomasyon stratejileri tasarlƒ±yor ve uyguluyoruz. Hiperotomasy√∂n yakla≈üƒ±mƒ±mƒ±z manuel g√∂revleri ortadan kaldƒ±rƒ±r, operasyonel maliyetleri %70'e kadar azaltƒ±r, hatalarƒ± minimize eder ve i≈ü g√ºc√ºn√ºz√ºn b√ºy√ºme ve yeniliƒüi y√∂nlendiren y√ºksek deƒüerli stratejik faaliyetlere odaklanmasƒ±nƒ± saƒülar."
};

try {
  console.log('Updating Turkish service descriptions...\n');

  let totalUpdated = 0;

  // Update each Turkish service
  Object.keys(turkishDescriptions).forEach(documentId => {
    const description = turkishDescriptions[documentId];

    const result = db.prepare(`
      UPDATE services
      SET description = ?,
          updated_at = datetime('now')
      WHERE document_id = ? AND locale = 'tr' AND published_at IS NOT NULL
    `).run(description, documentId);

    console.log(`Updated TR service ${documentId}: ${result.changes} row(s) affected`);
    totalUpdated += result.changes;
  });

  console.log(`\n‚úÖ Total Turkish services updated: ${totalUpdated}`);

  // Display all updated services
  console.log('\nüìã All services (EN & TR):');
  const allServices = db.prepare(`
    SELECT id, title,
           SUBSTR(description, 1, 80) || '...' as description_preview,
           locale
    FROM services
    WHERE published_at IS NOT NULL
    ORDER BY locale, title
  `).all();

  console.table(allServices);

} catch (error) {
  console.error('‚ùå Error updating Turkish services:', error.message);
  process.exit(1);
} finally {
  db.close();
}
